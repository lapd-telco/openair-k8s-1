FROM ubuntu:16.04
MAINTAINER sumichan <yoshifumi.sumida@okinawaopenlabs.org>

# Install required packages
ARG LAPACK_LIBNAME="liblapack.so"
ARG LAPACK_TARGET="/usr/lib/atlas-base/atlas/liblapack.so"
RUN apt-get update && \
    apt-get install -yq \
        software-properties-common \
        sudo \
        vim \
        curl \
        libtasn1-6-dev \
        libgnutls-dev \
        libatlas-dev \
        iproute \
        libconfig8-dev \
        autoconf  \
        automake  \
        bison  \
        build-essential \
        cmake \
        cmake-curses-gui  \
        doxygen \
        doxygen-gui \
        texlive-latex-base \
        ethtool \
        flex  \
        gdb  \
        git \
        graphviz \
        gtkwave \
        guile-2.0-dev  \
        iperf \
        iptables \
        iptables-dev \
        libatlas-base-dev \
        libblas-dev \
        liblapack-dev\
        liblapacke-dev\
        libffi-dev \
        libforms-bin \
        libforms-dev \
        libgcrypt11-dev \
        libgmp-dev \
        libgtk-3-dev \
        libidn2-0-dev  \
        libidn11-dev \
        libmysqlclient-dev  \
        libpython2.7-dev \
        libsctp1  \
        libsctp-dev  \
        libssl-dev  \
        libtool  \
        libusb-1.0-0-dev \
        libxml2 \
        libxml2-dev  \
        libxslt1-dev \
        mscgen  \
        octave-signal \
        openssh-client \
        openssh-server \
        openssl \
        python  \
        subversion \
        xmlstarlet \
        python-pip \
        pydb \
        libyaml-dev \
        wget \
        libxpm-dev \
        libboost-all-dev \
        nettle-dev \
        nettle-bin && \
    update-alternatives --set ${LAPACK_LIBNAME} ${LAPACK_TARGET} && \
    apt-get clean && \
    apt-get -y autoremove && \
    pip install \
        mako \
        requests \
        six

WORKDIR /tmp
RUN rm -rf /tmp/asn1c_oai && \
    git clone https://gitlab.eurecom.fr/oai/asn1c.git /tmp/asn1c_oai && \
    cd /tmp/asn1c_oai && \
    git checkout 0a7524184f16e7093990a31d8d4db487a16e5782 && \
    autoreconf -iv && \
    ./configure --program-suffix=_oai && \
    make -j`nproc` && \
    make install && \
    mv /usr/local/share/asn1c /usr/local/share/asn1c_oai

WORKDIR /tmp
RUN rm -rf /tmp/uhd && \
    git clone https://github.com/EttusResearch/uhd.git /tmp/uhd && \
    cd /tmp/uhd && \
    git checkout tags/v3.13.1.0 && \
    mkdir -p host/build && \
    cd host/build && \
    cmake ../ && \
    make -j`nproc` && \
    make test && \
    make install && \
    ldconfig

WORKDIR /tmp
# Original Install Procefure of Gitlab of Open Air Interface 5G
# RUN rm -rf /tmp/protobuf-cpp-3.3.0.tar.gz* /tmp/protobuf-3.3.0 && \
#     wget https://github.com/google/protobuf/releases/download/v3.3.0/protobuf-cpp-3.3.0.tar.gz && \
#     tar -xzvf protobuf-cpp-3.3.0.tar.gz && \
#     cd protobuf-3.3.0/ && \
#     ./configure && \
#     make -j`nproc` && \
#     make install

# Openair-k8s Install Procefure of Open Air Interface with RH
ARG GIT_PROTOBUF_URL="https://github.com/protocolbuffers/protobuf.git"
RUN rm -rf /tmp/protobuf && \
    git clone --depth=1 --branch=v3.3.0 ${GIT_PROTOBUF_URL} /tmp/protobuf && \
    cd /tmp/protobuf && \
    git submodule update --init --recursive && \
    ./autogen.sh && \
    ./configure && \
    make -j`nproc` && \
    make install && \
    ldconfig

WORKDIR /tmp
RUN rm -rf /tmp/protobuf-c && \
    git clone https://github.com/protobuf-c/protobuf-c.git && \
    cd protobuf-c && \
    git checkout 2a46af42784abf86804d536f6e0122d47cfeea45 && \
    ./autogen.sh && \
    ./configure && \
    make -j`nproc` && \
    make install

ARG GIT_TAG="v1.2.1"
WORKDIR /
RUN git clone --depth 1 --branch=${GIT_TAG} https://gitlab.eurecom.fr/oai/openairinterface5g.git
COPY patches patches/
RUN patch -p1 -d openairinterface5g < patches/disable_building_nasmesh_and_rbtool.patch

RUN . /openairinterface5g/oaienv && \
    ln -sf /usr/local/bin/asn1c_oai /usr/local/bin/asn1c && \
    ln -sf /usr/local/share/asn1c_oai /usr/local/share/asn1c && \
    /openairinterface5g/cmake_targets/build_oai -c --eNB --hardware USRP --verbose-compile && \
    ldconfig

# Download UHD Images For a FPGA Device
RUN uhd_images_downloader

# Add the built directory path
ENV PATH $PATH:/openairinterface5g/cmake_targets/lte_build_oai/build/

EXPOSE 2152/udp
EXPOSE 22100/tcp
EXPOSE 36412/udp
EXPOSE 36422/udp
EXPOSE 50000/udp
EXPOSE 50001/udp

# Run lte-softmodem with a sample option for USRP
CMD ["lte-softmodem", "-O", "/config/enb.conf"]
